{"version":3,"file":"TeamCalendar-E06zXzgk.js","sources":["../../src/pages/TeamCalendar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';\nimport { Calendar, Users } from 'lucide-react';\nimport { useAuth } from '../auth/AuthContext';\nimport { toast } from 'react-toastify';\nimport { LeaveRequest, User } from '../types';\n\ninterface LeaveWithUser extends LeaveRequest {\n  user?: User;\n}\n\nconst TeamCalendar: React.FC = () => {\n  const { token } = useAuth();\n  const [leaves, setLeaves] = useState<LeaveWithUser[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchAllLeaves = async () => {\n      if (!token) {\n        toast.error('Authentication required');\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:8080/api/admin/leaves', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch team leaves');\n        }\n\n        const data = await response.json();\n\n        // Fetch user names for each leave\n        const leavesWithNames = await Promise.all(\n          data.map(async (leave: LeaveWithUser) => {\n            try {\n              const userResponse = await fetch(`http://localhost:8080/api/users/${leave.userId}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n              });\n\n              if (userResponse.ok) {\n                const userData = await userResponse.json();\n                return { ...leave, user: userData };\n              } else {\n                console.error(`Failed to fetch user data for ID: ${leave.userId}`);\n                return leave;\n              }\n            } catch (error) {\n              console.error(`Error fetching user data for ID: ${leave.userId}`, error);\n              return leave;\n            }\n          })\n        );\n\n        setLeaves(leavesWithNames);\n      } catch (error) {\n        console.error('Error fetching team leaves:', error);\n        toast.error('Failed to fetch team calendar data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllLeaves();\n  }, [token]);\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'approved':\n        return 'bg-green-100 text-green-600';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-600';\n      case 'rejected':\n        return 'bg-red-100 text-red-600';\n      default:\n        return 'bg-gray-100 text-gray-600';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Group leaves by month\n  const groupLeavesByMonth = (leaves: LeaveWithUser[]) => {\n    const grouped = leaves.reduce((acc, leave) => {\n      const startDate = new Date(leave.startDate);\n      const monthYear = startDate.toLocaleString('en-US', { month: 'long', year: 'numeric' });\n      \n      if (!acc[monthYear]) {\n        acc[monthYear] = [];\n      }\n      acc[monthYear].push(leave);\n      return acc;\n    }, {} as Record<string, LeaveWithUser[]>);\n\n    // Sort leaves within each month by start date\n    Object.keys(grouped).forEach(month => {\n      grouped[month].sort((a, b) => \n        new Date(a.startDate).getTime() - new Date(b.startDate).getTime()\n      );\n    });\n\n    return grouped;\n  };\n\n  const groupedLeaves = groupLeavesByMonth(leaves);\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-bold\">Team Calendar</h1>\n          <Link to=\"/dashboard\">\n            <Button variant=\"outline\">Back to Dashboard</Button>\n          </Link>\n        </div>\n\n        <div className=\"space-y-6\">\n          {loading ? (\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"text-center\">Loading team calendar...</div>\n              </CardContent>\n            </Card>\n          ) : leaves.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"text-center text-gray-500\">No leave requests found</div>\n              </CardContent>\n            </Card>\n          ) : (\n            Object.entries(groupedLeaves).map(([monthYear, monthLeaves]) => (\n              <Card key={monthYear}>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-lg font-medium\">{monthYear}</CardTitle>\n                  <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {monthLeaves.map((leave) => (\n                      <div\n                        key={leave.id}\n                        className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors\"\n                      >\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-4\">\n                            <div>\n                              {(() => {\n                                let userName;\n                                if (leave.user?.name) {\n                                  userName = leave.user.name;\n                                } else {\n                                  userName = leave.userId;\n                                }\n                                return <p className=\"font-medium\">{userName}</p>;\n                              })()}\n                              <p className=\"text-sm text-gray-500\">\n                                {formatDate(leave.startDate)} - {formatDate(leave.endDate)}\n                              </p>\n                            </div>\n                            <div className=\"flex-1\">\n                              <p className=\"text-sm font-medium\">{leave.leaveType}</p>\n                              {leave.reason && (\n                                <p className=\"text-sm text-gray-500\">\n                                  {leave.reason}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <span\n                          className={`px-3 py-1 text-sm font-medium rounded-full ${getStatusColor(\n                            leave.status\n                          )}`}\n                        >\n                          {leave.status.toUpperCase()}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))\n          )}\n        </div>\n\n        <Card className=\"mt-6\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Statistics</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"p-4 border rounded-lg\">\n                <p className=\"text-sm text-gray-500\">Total Leaves</p>\n                <p className=\"text-2xl font-bold\">{leaves.length}</p>\n              </div>\n              <div className=\"p-4 border rounded-lg\">\n                <p className=\"text-sm text-gray-500\">Approved Leaves</p>\n                <p className=\"text-2xl font-bold\">\n                  {leaves.filter(leave => leave.status.toLowerCase() === 'approved').length}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamCalendar;"],"names":["TeamCalendar","token","useAuth","leaves","setLeaves","useState","loading","setLoading","useEffect","toast","response","data","leavesWithNames","leave","userResponse","userData","error","getStatusColor","status","formatDate","dateString","groupedLeaves","grouped","acc","monthYear","month","a","b","jsxs","jsx","Link","Button","Card","CardContent","monthLeaves","CardHeader","CardTitle","Calendar","userName","_a","Users"],"mappings":"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"}